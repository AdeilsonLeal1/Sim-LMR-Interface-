# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'save_table.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import pandas as pd
from tabulate import tabulate

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Dialog(object):
    def setupUi(self, Dialog, layers = None):
        self.layers = layers

        Dialog.setObjectName("Dialog")
        Dialog.resize(402, 260)
        Dialog.setWindowIcon(QtGui.QIcon('icons/LOGO.png'))
        Dialog.setWindowTitle("Save table")
        Dialog.setWindowFlags(QtCore.Qt.WindowCloseButtonHint)
               
        self.verticalLayout = QtWidgets.QVBoxLayout(Dialog)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.frame = QtWidgets.QFrame(Dialog)
        self.frame.setObjectName(u"frame")
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setStyleSheet(u"")

        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")

        self.tableWidget_layers = QtWidgets.QTableWidget(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(
            QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.tableWidget_layers.sizePolicy().hasHeightForWidth())
        self.tableWidget_layers.setSizePolicy(sizePolicy)
        self.tableWidget_layers.setMinimumSize(QtCore.QSize(550, 200))
        self.tableWidget_layers.setStyleSheet("font: 700 10pt \"Ubuntu\";")
        self.tableWidget_layers.horizontalHeader().setDefaultSectionSize(110)
        self.tableWidget_layers.setSizeAdjustPolicy(
            QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.tableWidget_layers.setVerticalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.tableWidget_layers.setHorizontalScrollMode(
            QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.tableWidget_layers.setWordWrap(True)
        self.tableWidget_layers.setObjectName("tableWidget_layers")
        self.tableWidget_layers.setColumnCount(4)
       

        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_layers.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_layers.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_layers.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget_layers.setHorizontalHeaderItem(3, item)
        self.tableWidget_layers.horizontalHeader().setStretchLastSection(False)
       
        self.verticalLayout_2.addWidget(self.tableWidget_layers)
    
        self.verticalLayout.addWidget(self.frame)

        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName(u"gridLayout_2")
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setObjectName(u"label")

        self.gridLayout_2.addWidget(self.label, 0, 0, 1, 1)

        self.lineEdit = QtWidgets.QLineEdit(Dialog)
        self.lineEdit.setObjectName(u"lineEdit")

        self.gridLayout_2.addWidget(self.lineEdit, 0, 1, 1, 1)

        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setObjectName(u"label_2")

        self.gridLayout_2.addWidget(self.label_2, 1, 0, 1, 1)

        self.comboBox = QtWidgets.QComboBox(Dialog)
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.setObjectName(u"comboBox")

        self.gridLayout_2.addWidget(self.comboBox, 1, 1, 1, 1)


        self.horizontalLayout.addLayout(self.gridLayout_2)

        self.buttonBox = QtWidgets.QDialogButtonBox(Dialog)
        self.buttonBox.setObjectName(u"buttonBox")
        sizePolicy1 = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.buttonBox.sizePolicy().hasHeightForWidth())
        self.buttonBox.setSizePolicy(sizePolicy1)
        self.buttonBox.setOrientation(QtCore.Qt.Vertical)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Save)

        self.horizontalLayout.addWidget(self.buttonBox)


        self.verticalLayout.addLayout(self.horizontalLayout)

        self.show_table()
        self.retranslateUi(Dialog)
        self.buttonBox.accepted.connect(lambda: self.save(Dialog))
        self.buttonBox.rejected.connect(Dialog.reject)
        

        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def show_table(self):
        self.tableWidget_layers.setRowCount(len(self.layers))   
        for row, text in enumerate(self.layers):
            for column, data in enumerate(text):
                self.tableWidget_layers.setItem(row, column, QtWidgets.QTableWidgetItem(str(text[f'{data}'])))

    def save(self, Dialog):
        data = []
        all_data = []
        for row in range(self.tableWidget_layers.rowCount()):
            for column in range(self.tableWidget_layers.columnCount()):
               data.append(self.tableWidget_layers.item(row, column).text())
            all_data.append(data)
            data = []
        
        columns = ['Material', 'Thickness (nm)', 'Refract. Index', 'Description']

        table = pd.DataFrame(all_data, columns=columns)

        format_save = self.comboBox.currentIndex()
        
        if format_save == 0:
            latex_code = tabulate(table, headers='keys', tablefmt='latex')
            file = open(f'{self.lineEdit.text()}.tex', 'w')
            file.write(latex_code)
            file.close()

            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Information)
            msg.setWindowTitle("Save to Latex")
            msg.setText("Successfully saved file")
            msg.exec()
            Dialog.close()
            
        elif format_save == 1:
            table.to_excel(f'{self.lineEdit.text()}.xlsx', sheet_name = "Materials", index= False)
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Information)
            msg.setWindowTitle("Save to Excel")
            msg.setText("Successfully saved file")
            msg.exec()
            Dialog.close()
            
        elif format_save == 2:
            table.to_csv(f'{self.lineEdit.text()}.csv', index= False)
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Information)
            msg.setWindowTitle("Save to CSV")
            msg.setText("Successfully saved file")
            msg.exec()
            Dialog.close()

        elif format_save == 3:
            file = open(f'{self.lineEdit.text()}.txt', 'w')
            file.write('Material,Thickness (nm),Refract. Index,Description,\n')

            for row in range(self.tableWidget_layers.rowCount()):
                for column in range(self.tableWidget_layers.columnCount()):
                    file.write(f"{self.tableWidget_layers.item(row, column).text()},")
                file.write('\n')
            file.close()
            msg = QtWidgets.QMessageBox()
            msg.setIcon(QtWidgets.QMessageBox.Information)
            msg.setWindowTitle("Save to Text file")
            msg.setText("Successfully saved file")
            msg.exec()
            Dialog.close()
        
    def retranslateUi(self, Dialog):

        _translate = QtCore.QCoreApplication.translate
        self.label.setText(_translate("Dialog", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:500;\">Name:</span></p></body></html>", None))
        self.label_2.setText(_translate("Dialog", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:500;\">Format:</span></p></body></html>", None))
        self.lineEdit.setText(_translate("Dialog",u"Table 1", None))
        self.comboBox.setItemText(0, _translate("Dialog", u"Latex file (*.tex)", None))
        self.comboBox.setItemText(1, _translate("Dialog", u"Excel file (*.xlsx)", None))
        self.comboBox.setItemText(2, _translate("Dialog", u"CSV file (*.csv)", None))
        self.comboBox.setItemText(3, _translate("Dialog", u"Text file (*.txt)", None))

        ___qtablewidgetitem = self.tableWidget_layers.horizontalHeaderItem(3)
        ___qtablewidgetitem.setText(_translate("Widget", u"Description", None))
        ___qtablewidgetitem1 = self.tableWidget_layers.horizontalHeaderItem(0)
        ___qtablewidgetitem1.setText(_translate("Widget", u"Material", None))
        ___qtablewidgetitem2 = self.tableWidget_layers.horizontalHeaderItem(1)
        ___qtablewidgetitem2.setText(_translate("Widget", u"Thickness (nm)", None))
        ___qtablewidgetitem3 = self.tableWidget_layers.horizontalHeaderItem(2)
        ___qtablewidgetitem3.setText(
            _translate("Widget", u"Refract. Index", None))
        

