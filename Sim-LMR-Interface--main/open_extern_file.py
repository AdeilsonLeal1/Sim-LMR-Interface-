# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'open_extern_file.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

from numpy import *
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from matplotlib.backends.backend_qt5agg import NavigationToolbar2QT

import os
import matplotlib.pyplot as plt
import pandas as pd


class Ui_Widget_2(object):
    def setupUi(self, Widget):

        self.n_file = [0,0]
        self.graphs = [0,0]

        Widget.setWindowIcon(QtGui.QIcon('icons/LOGO.png'))
        QtWidgets.QWidget.setWindowTitle(Widget, "Sim-LMR - External File Analyse")
        Widget.setObjectName("Widget")
        

        Widget.setObjectName("Widget")
        Widget.setMinimumSize(QtCore.QSize(800, 740))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Widget.sizePolicy().hasHeightForWidth())
        Widget.setSizePolicy(sizePolicy)
        Widget.setStyleSheet("QWidget{\n"
                                "    background-color: rgb(192, 191, 188);\n"
                                "}\n"
                                "QFrame{background-color: rgb(255, 255, 255);\n"
                                "                border-radius:5px;}\n"
                                "\n"
                                "QGroupBox{\n"
                                "    background-color: rgb(255, 255, 255);\n"
                                "\n"
                                "}\n"
                                "QLabel{\n"
                                "background-color: rgb(255, 255, 255);\n"
                                " }\n"
                                "QLineEdit{background-color: rgb(255, 255, 255);}\n"
                                "\n"
                                "QPushButton{\n"
                                "    font: 400 11pt \"Ubuntu\";\n"
                                "    color: rgb(255, 255,255);\n"
                                "    background-color: rgb(0, 130, 180);\n"
                                "    border-color: rgb(0, 100, 130);\n"
                                "    border-style: outset;\n"
                                "    border-width: 2px;\n"
                                "    border-radius:5px;\n"
                                "}\n"
                                "\n"
                                "QPushButton:hover{\n"
                                "    background-color: rgb(00, 140, 70);\n"
                                "    border-color: rgb(0, 120, 40);\n"
                                "}\n"
                                "\n"
                                "QCheckBox{background-color: rgb(255, 255, 255);}\n"
                                "QDoubleSpinBox{\n"
                                "   color: rgb(10, 25, 90);"
                                "   font: 400 12pt 'Ubuntu';"
                                "   border: 2px solid;"
                                "   border-color: #FF17365D;"
                                "   background-color: rgba(255, 255, 255,210);"
                                "   border-radius:5px;"
                                "}"
                                "QDoubleSpinBox::up-button"
                                "{"
                                "    border-left-width: 1px;"
                                "    border-left-color: darkgray;"
                                "   border-left-style: solid; /* just a single line */"
                                "    border-top-right-radius: 3px; /* same radius as the QComboBox */"
                                "   border-bottom-right-radius: 3px;"
                                "	image: url(:/icons/icons/arrow-up.png);"
                                "	width: 25;"
                                "}"
                                "QDoubleSpinBox::down-button"
                                "{"
                                "    border-left-width: 1px;"
                                "    border-left-color: darkgray;"
                                "    border-left-style: solid; /* just a single line */"
                                "    border-top-right-radius: 3px; /* same radius as the QComboBox */"
                                "    border-bottom-right-radius: 3px;"
                                "	image: url(:/icons/icons/arrow-down.png);"
                                "	width: 25;"
                                "}"
                                "\n")
        self.formLayout_2 = QtWidgets.QFormLayout(Widget)
        self.formLayout_2.setContentsMargins(4, 5, 4, 5)
        self.formLayout_2.setHorizontalSpacing(4)
        self.formLayout_2.setVerticalSpacing(5)
        self.formLayout_2.setObjectName("formLayout_2")
        self.frame_graphs = QtWidgets.QFrame(Widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_graphs.sizePolicy().hasHeightForWidth())
        self.frame_graphs.setSizePolicy(sizePolicy)
        self.frame_graphs.setMinimumSize(QtCore.QSize(0, 280))
        self.frame_graphs.setStyleSheet(    "QLabel{\n"
                                            "border:none;\n"
                                            "border-color: rgb(0, 75, 150);\n"
                                            "}\n")
        self.frame_graphs.setObjectName("frame_graphs")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_graphs)
        self.verticalLayout_3.setContentsMargins(3, 3, 3, 3)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout_3.addLayout(self.verticalLayout_2)
        self.formLayout_2.setWidget(0, QtWidgets.QFormLayout.SpanningRole, self.frame_graphs)
        self.frame_file = QtWidgets.QFrame(Widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_file.sizePolicy().hasHeightForWidth())
        self.frame_file.setSizePolicy(sizePolicy)
        self.frame_file.setMinimumSize(QtCore.QSize(250, 0))
        self.frame_file.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_file.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_file.setObjectName("frame_file")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_file)
        self.verticalLayout_4.setContentsMargins(4, 5, 4, 4)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.groupBox = QtWidgets.QGroupBox(self.frame_file)
        self.groupBox.setObjectName("groupBox")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.groupBox)
        self.verticalLayout.setObjectName("verticalLayout")
        self.checkBox_file1 = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox_file1.setObjectName("checkBox_file1")
        self.verticalLayout.addWidget(self.checkBox_file1)
        
        self.btn_load_1 = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_load_1.sizePolicy().hasHeightForWidth())
        self.btn_load_1.setSizePolicy(sizePolicy)
        self.btn_load_1.setMinimumSize(QtCore.QSize(100, 25))
        self.btn_load_1.setObjectName("btn_load_1")
        self.verticalLayout.addWidget(self.btn_load_1)

        self.label_title1 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_title1.sizePolicy().hasHeightForWidth())
        self.label_title1.setSizePolicy(sizePolicy)
        self.label_title1.setObjectName("label_title1")
        self.verticalLayout.addWidget(self.label_title1)

        self.btn_remove_1 = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_remove_1.sizePolicy().hasHeightForWidth())
        self.btn_remove_1.setSizePolicy(sizePolicy)
        self.btn_remove_1.setMinimumSize(QtCore.QSize(100, 30))
        self.btn_remove_1.setMaximumSize(QtCore.QSize(120,35))        
        self.btn_remove_1.setEnabled(False)
        self.btn_remove_1.setStyleSheet("QPushButton{\n"
                                    "    color: rgb(255, 255,255);\n"
                                    "    background-color: #606060;\n"
                                    "    border-color: #404040;\n"
                                    "    border-style: outset;\n"
                                    "    border-width: 3px;\n"
                                    "    border-radius:10px;\n"
                                    "}\n"
                                    "\n"
                                    "QPushButton:hover{\n"
                                    "    background-color: rgb(180, 20, 20);\n"
                                    "    border-color: rgb(150, 25, 20);\n"
                                    "\n"
                                    "}\n"
                                    "")
        self.btn_remove_1.setObjectName("btn_remove_1")
        self.verticalLayout.addWidget(self.btn_remove_1, 0, QtCore.Qt.AlignHCenter)
        
        self.checkBox_file2 = QtWidgets.QCheckBox(self.groupBox)
        self.checkBox_file2.setObjectName("checkBox_file2")
        self.verticalLayout.addWidget(self.checkBox_file2)
        
        self.btn_load_2 = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_load_2.sizePolicy().hasHeightForWidth())
        self.btn_load_2.setSizePolicy(sizePolicy)
        self.btn_load_2.setMinimumSize(QtCore.QSize(100, 25))
        self.btn_load_2.setObjectName("btn_load_2")
        self.verticalLayout.addWidget(self.btn_load_2)
        
        self.label_title2 = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_title2.sizePolicy().hasHeightForWidth())
        self.label_title2.setSizePolicy(sizePolicy)
        self.label_title2.setObjectName("label_title2")
        self.verticalLayout.addWidget(self.label_title2)
        
        self.btn_remove_2 = QtWidgets.QPushButton(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_remove_2.sizePolicy().hasHeightForWidth())
        self.btn_remove_2.setSizePolicy(sizePolicy)
        self.btn_remove_2.setMinimumSize(QtCore.QSize(100, 30))
        self.btn_remove_2.setMaximumSize(QtCore.QSize(120,35))        
        self.btn_remove_2.setEnabled(False)
        self.btn_remove_2.setStyleSheet("QPushButton{\n"
                                    "    color: rgb(255, 255,255);\n"
                                    "    background-color: #606060;\n"
                                    "    border-color: #404040;\n"
                                    "    border-style: outset;\n"
                                    "    border-width: 3px;\n"
                                    "    border-radius:10px;\n"
                                    "}\n"
                                    "\n"
                                    "QPushButton:hover{\n"
                                    "    background-color: rgb(180, 20, 20);\n"
                                    "    border-color: rgb(150, 25, 20);\n"
                                    "\n"
                                    "}\n"
                                    "")
        self.btn_remove_2.setObjectName("btn_remove_1")
        self.verticalLayout.addWidget(self.btn_remove_2, 0, QtCore.Qt.AlignHCenter)
        
        self.verticalLayout_4.addWidget(self.groupBox)
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.frame_file)
        self.frame_results = QtWidgets.QFrame(Widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_results.sizePolicy().hasHeightForWidth())
        self.frame_results.setSizePolicy(sizePolicy)
        self.frame_results.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_results.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_results.setObjectName("frame_results")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frame_results)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gb_Results = QtWidgets.QGroupBox(self.frame_results)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gb_Results.sizePolicy().hasHeightForWidth())
        self.gb_Results.setSizePolicy(sizePolicy)
        self.gb_Results.setStyleSheet("font: 500 10pt \"Segoe UI\";\n")
        self.gb_Results.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.gb_Results.setObjectName("gb_Results")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.gb_Results)
        self.gridLayout_2.setContentsMargins(-1, 5, -1, 5)
        self.gridLayout_2.setVerticalSpacing(5)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.label = QtWidgets.QLabel(self.gb_Results)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMaximumSize(QtCore.QSize(120, 16777215))
        self.label.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label.setObjectName("label")
        self.gridLayout_2.addWidget(self.label, 0, 0, 1, 1)
        self.Qline_resonance = QtWidgets.QLineEdit(self.gb_Results)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Qline_resonance.sizePolicy().hasHeightForWidth())
        self.Qline_resonance.setSizePolicy(sizePolicy)
        self.Qline_resonance.setMaximumSize(QtCore.QSize(110, 16777215))
        self.Qline_resonance.setText("")
        self.Qline_resonance.setReadOnly(True)
        self.Qline_resonance.setObjectName("Qline_resonance")
        self.gridLayout_2.addWidget(self.Qline_resonance, 0, 1, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.gb_Results)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_15.sizePolicy().hasHeightForWidth())
        self.label_15.setSizePolicy(sizePolicy)
        self.label_15.setMaximumSize(QtCore.QSize(120, 16777215))
        self.label_15.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_15.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_15.setObjectName("label_15")
        self.gridLayout_2.addWidget(self.label_15, 1, 0, 1, 1)
        self.Qline_fwhm = QtWidgets.QLineEdit(self.gb_Results)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Qline_fwhm.sizePolicy().hasHeightForWidth())
        self.Qline_fwhm.setSizePolicy(sizePolicy)
        self.Qline_fwhm.setMaximumSize(QtCore.QSize(110, 16777215))
        self.Qline_fwhm.setText("")
        self.Qline_fwhm.setReadOnly(True)
        self.Qline_fwhm.setObjectName("Qline_fwhm")
        self.gridLayout_2.addWidget(self.Qline_fwhm, 1, 1, 1, 1)
        self.label_16 = QtWidgets.QLabel(self.gb_Results)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_16.sizePolicy().hasHeightForWidth())
        self.label_16.setSizePolicy(sizePolicy)
        self.label_16.setMaximumSize(QtCore.QSize(130, 16777215))
        self.label_16.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_16.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_16.setObjectName("label_16")
        self.gridLayout_2.addWidget(self.label_16, 2, 0, 1, 1)
        self.Qline_min_ref = QtWidgets.QLineEdit(self.gb_Results)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Qline_min_ref.sizePolicy().hasHeightForWidth())
        self.Qline_min_ref.setSizePolicy(sizePolicy)
        self.Qline_min_ref.setMaximumSize(QtCore.QSize(110, 16777215))
        self.Qline_min_ref.setReadOnly(True)
        self.Qline_min_ref.setObjectName("Qline_min_ref")
        self.gridLayout_2.addWidget(self.Qline_min_ref, 2, 1, 1, 1)
        self.horizontalLayout.addWidget(self.gb_Results)
        self.gb_Results_2 = QtWidgets.QGroupBox(self.frame_results)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gb_Results_2.sizePolicy().hasHeightForWidth())
        self.gb_Results_2.setSizePolicy(sizePolicy)
        self.gb_Results_2.setStyleSheet("font: 500 10pt \"Segoe UI\";\n")
        self.gb_Results_2.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.gb_Results_2.setObjectName("gb_Results_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.gb_Results_2)
        self.gridLayout_3.setContentsMargins(-1, 5, -1, 5)
        self.gridLayout_3.setVerticalSpacing(5)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_4 = QtWidgets.QLabel(self.gb_Results_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setMaximumSize(QtCore.QSize(120, 16777215))
        self.label_4.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_4.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_4.setObjectName("label_4")
        self.gridLayout_3.addWidget(self.label_4, 0, 0, 1, 1)
        self.Qline_resonance_2 = QtWidgets.QLineEdit(self.gb_Results_2)
        self.Qline_resonance_2.setMaximumSize(QtCore.QSize(110, 16777215))
        self.Qline_resonance_2.setText("")
        self.Qline_resonance_2.setSizePolicy(sizePolicy)
        self.Qline_resonance_2.setReadOnly(True)
        self.Qline_resonance_2.setObjectName("Qline_resonance_2")
        self.gridLayout_3.addWidget(self.Qline_resonance_2, 0, 1, 1, 1)
        self.label_21 = QtWidgets.QLabel(self.gb_Results_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_21.sizePolicy().hasHeightForWidth())
        self.label_21.setSizePolicy(sizePolicy)
        self.label_21.setMaximumSize(QtCore.QSize(120, 16777215))
        self.label_21.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_21.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_21.setObjectName("label_21")
        self.gridLayout_3.addWidget(self.label_21, 1, 0, 1, 1)
        self.Qline_fwhm_2 = QtWidgets.QLineEdit(self.gb_Results_2)
        self.Qline_fwhm_2.setMaximumSize(QtCore.QSize(110, 16777215))
        self.Qline_fwhm_2.setSizePolicy(sizePolicy)
        self.Qline_fwhm_2.setText("")
        self.Qline_fwhm_2.setReadOnly(True)
        self.Qline_fwhm_2.setObjectName("Qline_fwhm_2")
        self.gridLayout_3.addWidget(self.Qline_fwhm_2, 1, 1, 1, 1)
        self.label_22 = QtWidgets.QLabel(self.gb_Results_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_22.sizePolicy().hasHeightForWidth())
        self.label_22.setSizePolicy(sizePolicy)
        self.label_22.setMaximumSize(QtCore.QSize(130, 16777215))
        self.label_22.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_22.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_22.setObjectName("label_22")
        self.gridLayout_3.addWidget(self.label_22, 2, 0, 1, 1)
        self.Qline_min_ref_2 = QtWidgets.QLineEdit(self.gb_Results_2)
        self.Qline_min_ref_2.setMaximumSize(QtCore.QSize(110, 16777215))
        self.Qline_min_ref_2.setSizePolicy(sizePolicy)
        self.Qline_min_ref_2.setReadOnly(True)
        self.Qline_min_ref_2.setObjectName("Qline_min_ref_2")
        self.gridLayout_3.addWidget(self.Qline_min_ref_2, 2, 1, 1, 1)
        self.horizontalLayout.addWidget(self.gb_Results_2)
        self.verticalLayout_5.addLayout(self.horizontalLayout)
        self.gb_Results_3 = QtWidgets.QGroupBox(self.frame_results)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.gb_Results_3.sizePolicy().hasHeightForWidth())
        self.gb_Results_3.setSizePolicy(sizePolicy)
        self.gb_Results_3.setStyleSheet("font: 500 10pt \"Segoe UI\";\n")
        self.gb_Results_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.gb_Results_3.setObjectName("gb_Results_3")
        self.gridLayout = QtWidgets.QGridLayout(self.gb_Results_3)
        self.gridLayout.setHorizontalSpacing(0)
        self.gridLayout.setVerticalSpacing(6)
        self.gridLayout.setObjectName("gridLayout")
        self.label_27 = QtWidgets.QLabel(self.gb_Results_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_27.sizePolicy().hasHeightForWidth())
        self.label_27.setSizePolicy(sizePolicy)
        self.label_27.setMaximumSize(QtCore.QSize(150, 16777215))
        self.label_27.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_27.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_27.setObjectName("label_27")
        self.gridLayout.addWidget(self.label_27, 0, 0, 1, 1)
        self.Qline_delta_res = QtWidgets.QLineEdit(self.gb_Results_3)
        self.Qline_delta_res.setMaximumSize(QtCore.QSize(120, 16777215))
        self.Qline_delta_res.setReadOnly(True)
        self.Qline_delta_res.setText('0')
        self.Qline_delta_res.setObjectName("Qline_delta_res")
        self.gridLayout.addWidget(self.Qline_delta_res, 0, 1, 1, 1)
        self.label_26 = QtWidgets.QLabel(self.gb_Results_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_26.sizePolicy().hasHeightForWidth())
        self.label_26.setSizePolicy(sizePolicy)
        self.label_26.setMaximumSize(QtCore.QSize(150, 16777215))
        self.label_26.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_26.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_26.setObjectName("label_26")
        self.gridLayout.addWidget(self.label_26, 1, 0, 1, 1)
        self.spin_delta_index = QtWidgets.QDoubleSpinBox(self.gb_Results_3)
        self.spin_delta_index.setObjectName(u"spin_delta_index")
        self.spin_delta_index.setDecimals(5)
        self.spin_delta_index.setMinimum(0.00001)
        self.spin_delta_index.setSingleStep(0.00001)
        self.spin_delta_index.setValue(0.001)
        self.gridLayout.addWidget(self.spin_delta_index, 1, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.gb_Results_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy)
        self.label_6.setMaximumSize(QtCore.QSize(150, 16777215))
        self.label_6.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_6.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout.addWidget(self.label_6, 2, 0, 1, 1)
        self.Qline_sensibility = QtWidgets.QLineEdit(self.gb_Results_3)
        self.Qline_sensibility.setMaximumSize(QtCore.QSize(120, 16777215))
        self.Qline_sensibility.setText("0")
        self.Qline_sensibility.setReadOnly(True)
        self.Qline_sensibility.setObjectName("Qline_sensibility")
        self.gridLayout.addWidget(self.Qline_sensibility, 2, 1, 1, 1)
        self.label_25 = QtWidgets.QLabel(self.gb_Results_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_25.sizePolicy().hasHeightForWidth())
        self.label_25.setSizePolicy(sizePolicy)
        self.label_25.setMaximumSize(QtCore.QSize(150, 16777215))
        self.label_25.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_25.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_25.setObjectName("label_25")
        self.gridLayout.addWidget(self.label_25, 3, 0, 1, 1)
        self.Qline_QF = QtWidgets.QLineEdit(self.gb_Results_3)
        self.Qline_QF.setMaximumSize(QtCore.QSize(120, 16777215))
        self.Qline_QF.setText("0")
        self.Qline_QF.setReadOnly(True)
        self.Qline_QF.setObjectName("Qline_QF")
        self.gridLayout.addWidget(self.Qline_QF, 3, 1, 1, 1)
        self.verticalLayout_5.addWidget(self.gb_Results_3)
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.frame_results)

        self.retranslateUi(Widget)
        QtCore.QMetaObject.connectSlotsByName(Widget)

        self.figure = plt.figure(dpi=250)
        self.canvas = FigureCanvas(self.figure)
        self.toolbar = NavigationToolbar2QT(self.canvas)
        self.verticalLayout_2.addWidget(self.canvas)
        self.verticalLayout_3.addWidget(self.toolbar)

        self.btn_load_1.clicked.connect(self.open_1)
        self.btn_load_2.clicked.connect(self.open_2)
        self.spin_delta_index.valueChanged.connect(self.sensibility)
        self.btn_remove_1.clicked.connect(self.remove_file_1)
        self.btn_remove_2.clicked.connect(self.remove_file_2)

    
    def retranslateUi(self, Widget):
        _translate = QtCore.QCoreApplication.translate
        self.groupBox.setTitle(_translate("Widget", "Files"))
        self.checkBox_file1.setText(_translate("Widget", "File 1"))
        self.btn_load_1.setText(_translate("Widget", "Load"))
        self.btn_remove_1.setText(_translate("Widget", "Remove file"))
        self.label_title1.setText(_translate("Widget", "Title 1"))
        self.checkBox_file2.setText(_translate("Widget", "File 2"))
        self.btn_load_2.setText(_translate("Widget", "Load"))
        self.btn_remove_2.setText(_translate("Widget", "Remove file"))
        self.label_title2.setText(_translate("Widget", "Title 2"))
        self.gb_Results.setTitle(_translate("Widget", "Results - Curve 1"))
        self.label.setText(_translate("Widget", "<html><head/><body><p><span style=\" font-weight:700;\">Resonace point:</span></p></body></html>"))
        self.label_15.setText(_translate("Widget", "<html><head/><body><p><span style=\" font-weight:700;\">FWHM:</span></p></body></html>"))
        self.label_16.setText(_translate("Widget", "<html><head/><body><p><span style=\" font-weight:700;\">Min. Reflectance:</span></p></body></html>"))
        self.gb_Results_2.setTitle(_translate("Widget", "Results - Curve 2"))
        self.label_4.setText(_translate("Widget", "<html><head/><body><p><span style=\" font-weight:700;\">Resonace point:</span></p></body></html>"))
        self.label_21.setText(_translate("Widget", "<html><head/><body><p><span style=\" font-weight:700;\">FWHM:</span></p></body></html>"))
        self.label_22.setText(_translate("Widget", "<html><head/><body><p><span style=\" font-weight:700;\">Min. Reflectance:</span></p></body></html>"))
        self.gb_Results_3.setTitle(_translate("Widget", "Results - Combined curves"))
        self.label_27.setText(_translate("Widget", "<html><head/><body><p><span style=\" font-family:\'Arial\',\'sans-serif\'; font-size:14px; font-weight:700; color:#000000;\">Δ(θ or λ): </span></p></body></html>"))
        self.label_26.setText(_translate("Widget", "<html><head/><body><p><span style=\" font-family:\'Arial\',\'sans-serif\'; font-size:14px; font-weight:700; color:#000000;\">Δn_analyte:</span></p></body></html>"))
        self.label_6.setText(_translate("Widget", "<html><head/><body><p><span style=\" font-weight:700;\">Sensibility:</span></p></body></html>"))
        self.label_25.setText(_translate("Widget", "<html><head/><body><p><span style=\" font-weight:700;\">Quality Factor:</span></p></body></html>"))

    def open_1(self):
        self.n_file[0]=1
        self.open_file(self.checkBox_file1, self.label_title1)
    
    def open_2(self):
        self.n_file[1]=1
        self.open_file(self.checkBox_file2, self.label_title2)
        
    def open_file(self, checkbox, label_title):
        
        try:
            path_1 = QtWidgets.QFileDialog.getOpenFileName(None, "Open File", filter="Text Files (*.txt) ;; CSV Files (*.csv)")[0]
         
            if path_1:
                checkbox.setChecked(True)
                label_title.setHidden(False)
                label_title.setText(f'Name: {os.path.basename(path_1)}')
            else:
                label_title.setHidden(False)
                label_title.setText(QtCore.QCoreApplication.translate("Widget", u"<html><head/><body><p align=\"center\"><span style=\" font-weight:400; color:#d41010;\">Error opening file. check the format!</span></p></body></html>", None))
              
            try: 
                df = pd.read_csv(path_1, encoding='latin1')
                x = list(df.iloc[:, 0])
                y = list(df.iloc[:, 1])

                if self.n_file == [1, 0]:
                    self.print_parameters_1(x,y, self.Qline_fwhm, self.Qline_min_ref, self.Qline_resonance)
                    self.set_desable(self.btn_load_1, self.btn_remove_1)

                    self.show_graph(x, y, 'blue', 'Curve 1')
                    self.graphs[0] = [x,y]
                
                if self.n_file == [0, 1]:
                    self.print_parameters_1(x,y, self.Qline_fwhm_2, self.Qline_min_ref_2, self.Qline_resonance_2)
                    self.set_desable(self.btn_load_2, self.btn_remove_2)

                    self.show_graph(x, y, 'red', 'Curve 2')
                    self.graphs[1] = [x,y]
                
                if self.n_file == [1, 1]:

                    if self.Qline_resonance.text() == "":
                        self.print_parameters_2(x,y, self.Qline_fwhm, self.Qline_min_ref, self.Qline_resonance, self.Qline_delta_res, self.spin_delta_index, self.Qline_sensibility, self.Qline_QF)
                        self.set_desable(self.btn_load_1, self.btn_remove_1)
                        self.graphs[0] = [x,y]
                        self.show_graph(x, y, 'blue', 'Curve 1')
                    
                    if self.Qline_resonance_2.text() == "":
                        self.print_parameters_2(x,y, self.Qline_fwhm_2, self.Qline_min_ref_2, self.Qline_resonance_2, self.Qline_delta_res, self.spin_delta_index, self.Qline_sensibility, self.Qline_QF)
                        self.set_desable(self.btn_load_2, self.btn_remove_2)
                        self.graphs[1] = [x,y]
                        self.show_graph(x, y, 'red', 'Curve 2')

                

            except:
                label_title.setHidden(False)
                label_title.setText(QtCore.QCoreApplication.translate("Widget", u"<html><head/><body><p align=\"center\"><span style=\" font-weight:400; color:#d41010;\">Error reading file. Check the format!</span></p></body></html>", None))

        except:
            label_title.setHidden(False)
            label_title.setText(QtCore.QCoreApplication.translate("Widget", u"<html><head/><body><p align=\"center\"><span style=\" font-weight:400; color:#d41010;\">Error opening file!</span></p></body></html>", None))

    def show_graph(self, x, y, colors, labels):
        font=dict(size=5, family="Sans-Serif")
        plt.rc('font', **font)

        plt.subplots_adjust(left=0.160,
                    bottom=0.195, 
                    right=0.930, 
                    top=0.950, 
                    wspace=0.1, 
                    hspace=0.2)

        plt.plot(x, y, color=colors, label=labels)
        plt.grid(True, alpha=0.3)
        plt.ylabel('Reflectance',  fontdict=font)
        plt.yticks(arange(0, 1.2, step=0.2), fontsize=5)
        plt.xticks(fontsize=5)
        plt.legend()

        self.canvas.draw()

    
    def set_desable(self, btn_load, btn_remove):
        btn_load.setEnabled(False)
        btn_load.setStyleSheet("QPushButton{\n"
                                    "    color: rgb(255, 255,255);\n"
                                    "    background-color: #606060;\n"
                                    "    border-color: #404040;\n"
                                    "    border-style: outset;\n"
                                    "    border-width: 2px;\n"
                                    "    border-radius:5px;\n"
                                    "}\n"
                                    "\n"
                                    "QPushButton:hover{\n"
                                    "    background-color: rgb(180, 20, 20);\n"
                                    "    border-color: rgb(150, 25, 20);\n"
                                    "\n"
                                    "}\n"
                                    "")
        btn_remove.setEnabled(True)
        btn_remove.setStyleSheet("QPushButton{\n"
                                                    "    color: rgb(255, 255,255);\n"
                                                    "    background-color: rgb(0, 130, 180);\n"
                                                    "    border-color: rgb(0, 100, 130);\n"
                                                    "    border-style: outset;\n"
                                                    "    border-width: 3px;\n"
                                                    "    border-radius:10px;\n"
                                                    "}\n"
                                                    "QPushButton:hover{\n"
                                                    "    background-color: rgb(180, 20, 20);\n"
                                                    "    border-color: rgb(150, 25, 20);\n"
                                                    "}\n")
        
    
    def print_parameters_1(self, x_axis, y_axis, fwhm, min_reflectance, resonance_point):

        max_, min_ = self.find_max_min(y_axis)
        y = list(y_axis[max_[-2][0]:max_[-1][0]])
        x_axis = list(x_axis[max_[-2][0]:max_[-1][0]])

        id_resonance = y.index(min(y))

        x1, x2, id1, id2, y_med = self.defFWHM(x_axis, y_axis)

        #plt.plot([x_axis[id1], x_axis[id2]],[y_med, y_med])
        
        self.res_angle_1 = x_axis[id_resonance]

        fwhm.setText(f'{abs(x2-x1):.6f}')
        min_reflectance.setText(f'{min(y):.6f}')
        resonance_point.setText(f'{self.res_angle_1:.6f}')
    
    
    def print_parameters_2(self, x_axis, y_axis, fwhm, min_reflectance, resonance_point, delta_res, delta_index, sensibility, qf):

        max_, min_ = self.find_max_min(y_axis)
        y = list(y_axis[max_[-2][0]:max_[-1][0]])
        x_axis = list(x_axis[max_[-2][0]:max_[-1][0]])

        id_resonance = y.index(min(y))

        x1, x2, id1, id2, y_med = self.defFWHM(x_axis, y_axis)
        
        self.res_angle_2 = x_axis[id_resonance]

        delta_resonance = abs(self.res_angle_2 - self.res_angle_1)

        #plt.plot([x_axis[id1], x_axis[id2]],[y_med, y_med])

        fwhm.setText(f'{abs(x2-x1):.6f}')
        min_reflectance.setText(f'{min(y):.6f}')
        resonance_point.setText(f'{self.res_angle_2:.6f}')
        delta_res.setText(f'{abs(self.res_angle_2 - self.res_angle_1):.6f}')
        
        delta_analyte = float(delta_index.text().replace(',','.'))
        sens = (delta_resonance/delta_analyte)
        sensibility.setText(f'{sens:.6f}')
        
        qf.setText(f"{(sens/abs(x2-x1)):.6f}")

    
    def sensibility(self):
        
        delta_resonance = abs(self.res_angle_2 - self.res_angle_1)
        delta_analyte = self.spin_delta_index.value()
        sens = (delta_resonance/delta_analyte)
        self.Qline_sensibility.setText(f'{sens:.6f}')
        fwhm = float(self.Qline_fwhm_2.text().replace(',','.'))

        self.Qline_QF.setText(f"{(sens/fwhm):.6f}")
   
    
    def defFWHM(self, theta_i, curve):
        
        max_, min_ = self.find_max_min(curve)
        
        y = list(curve[max_[-2][0]:max_[-1][0]])

        id_min = y.index(min(y))

        y_left = y[0:id_min]
        y_right = y[id_min-1:len(y)]

        y_mx_left = max(y_left)
        y_mn_left = min(y_left)

        y_mx_right = max(y_right)
        y_mn_right = min(y_right)

        y_med_left = (y_mx_left + y_mn_left)/2
        y_med_right = (y_mx_right + y_mn_right)/2

        #y_med = (y_med_left + y_med_right)/2
        #y_med = (max(y))/2
        y_med = (1+min(y))/2
        #y_med = (max(y)+min(y))/2
        
        signs = sign(add(y, -y_med))

        zero_crossings = (signs[0:-2] != signs[1:-1])
        zero_crossings_i = where(zero_crossings)[0]

        id1 = zero_crossings_i[-1]
        id2 = zero_crossings_i[-2]

        x1 = theta_i[id1] + (theta_i[id1+1] - theta_i[id1]) * ((y_med - y[id1]) / (y[id1+1] - y[id1]))
        x2 = theta_i[id2] + (theta_i[id2+1] - theta_i[id2]) * ((y_med - y[id2]) / (y[id2+1] - y[id2]))

        return x1, x2, id1, id2, y_med

    def find_max_min(self, seq):
        max_list = []
        min_list = []

        for i in range(1, len(seq) - 1):
            if i == 1 and seq[i] > seq[i+1]: 
                max_list.append((i, seq[i]))
            elif i == (len(seq) - 2) and seq[i] >= seq[i-1]:
                max_list.append((i, seq[i]))
            elif seq[i] > seq[i-1] and seq[i] > seq[i+1]:
                max_list.append((i, seq[i]))
            elif seq[i] < seq[i-1] and seq[i] < seq[i+1]:
                min_list.append((i, seq[i]))
        
        return max_list, min_list

    def remove_file_1(self):
        self.n_file[0] = 0
        self.remove_file()

    def remove_file_2(self):
        self.n_file[1] = 0
        self.remove_file()

    def remove_file(self):

        if self.n_file == [0, 1]:
            self.set_enable(self.btn_load_1, self.btn_remove_1)
            self.checkBox_file1.setChecked(False)
            self.label_title1.setText("Empty")
            
            self.Qline_resonance.clear()
            self.Qline_fwhm.clear()
            self.Qline_min_ref.clear()
            
            self.Qline_delta_res.clear()
            self.Qline_sensibility.clear()
            self.Qline_QF.clear()

            self.figure.clear()
            self.show_graph(self.graphs[1][0], self.graphs[1][1], 'red', 'Curve 2')
            

        if self.n_file == [1, 0]:
            self.set_enable(self.btn_load_2, self.btn_remove_2)
            self.checkBox_file2.setChecked(False)
            self.label_title2.setText("Empty")

            self.Qline_resonance_2.clear()
            self.Qline_fwhm_2.clear()
            self.Qline_min_ref_2.clear()
            
            self.Qline_delta_res.clear()
            self.Qline_sensibility.clear()
            self.Qline_QF.clear()

            self.figure.clear()
            self.show_graph(self.graphs[0][0], self.graphs[0][1], 'blue', 'Curve 1')
        
        if self.n_file == [0, 0]:
            if self.Qline_resonance.text() == "":
                self.set_enable(self.btn_load_2, self.btn_remove_2)
                self.checkBox_file2.setChecked(False)
                self.label_title2.setText("Empty")

                self.Qline_resonance_2.clear()
                self.Qline_fwhm_2.clear()
                self.Qline_min_ref_2.clear()
            
            if self.Qline_resonance_2.text() == "":
                self.set_enable(self.btn_load_1, self.btn_remove_1)
                self.checkBox_file1.setChecked(False)
                self.label_title1.setText("Empty")
                
                self.Qline_resonance.clear()
                self.Qline_fwhm.clear()
                self.Qline_min_ref.clear()
            
            self.figure.clear()
            self.canvas.draw()
   
    def set_enable(self, btn_load, btn_remove):
        btn_load.setEnabled(True)
        btn_load.setStyleSheet("QPushButton{\n"
                                "    font: 400 11pt \"Ubuntu\";\n"
                                "    color: rgb(255, 255,255);\n"
                                "    background-color: rgb(0, 130, 180);\n"
                                "    border-color: rgb(0, 100, 130);\n"
                                "    border-style: outset;\n"
                                "    border-width: 2px;\n"
                                "    border-radius:5px;\n"
                                "}\n"
                                "\n"
                                "QPushButton:hover{\n"
                                "    background-color: rgb(00, 140, 70);\n"
                                "    border-color: rgb(0, 120, 40);\n"
                                "}\n")
        btn_remove.setEnabled(False)
        btn_remove.setStyleSheet("QPushButton{\n"
                                    "    color: rgb(255, 255,255);\n"
                                    "    background-color: #606060;\n"
                                    "    border-color: #404040;\n"
                                    "    border-style: outset;\n"
                                    "    border-width: 3px;\n"
                                    "    border-radius:10px;\n"
                                    "}\n")



    
